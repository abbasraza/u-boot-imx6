if ${fs}load ${dtype} ${disk}:1 80800000 uEnv.txt ; then
    env import -t 80800000 $filesize
else
    setenv bootargs enable_wait_mode=off
fi

setenv dtbname imx6sx-nitrogen6sx.dtb

setenv fdt_addr 83000000
if ${fs}load ${dtype} ${disk}:1 $fdt_addr /$dtbname ; then
	fdt addr $fdt_addr
	setenv fdt_high 0xffffffff
else
	echo "!!!! Error loading /$dtbname";
	exit;
fi

# ------------------- HDMI detection

# first enable the chip
i2c dev 1
i2c mw 38 8.1 bd

i2c dev 2

if i2c probe 0x50 ; then
	echo "------ have HDMI monitor";
	if itest.s x == x$allow_noncea ; then
		setenv bootargs $bootargs mxc_hdmi.only_cea=1;
		echo "only CEA modes allowed on HDMI port";
	else
		setenv bootargs $bootargs mxc_hdmi.only_cea=0;
		echo "non-CEA modes allowed on HDMI, audio may be affected";
	fi
else
	fdt rm lcdif1
	echo "------ no HDMI monitor";
fi

# ------------------- LVDS detection
setenv have_lvds
i2c dev 2

if i2c probe 0x04 ; then
	echo "------ have Hannstar 10";
	setenv have_lvds 1
else
	echo "------ no Freescale display";
	fdt rm hannstar;
fi

if i2c probe 0x38 ; then
	if itest.s "xLDB-WXGA" == "x$panel"; then
		screenres=1280,800
		fdt rm okaya1024x600
	else
		screenres=1024,600
		fdt rm lg1280x800
	fi
	setenv have_lvds 1
	setenv bootargs $bootargs ft5x06_ts.screenres=$screenres
	if itest.s "x" -ne "x$calibration" ; then
		setenv bootargs $bootargs ft5x06_ts.calibration=$calibration
	fi
else
	echo "------ no ft5x06 touch controller";
	fdt rm okaya1024x600
	fdt rm lg1280x800
fi

if itest.s "x" == "x$have_lvds"; then
	fdt rm lcdif2;
fi

setenv bootargs "$bootargs console=ttymxc0,115200 vmalloc=400M consoleblank=0 rootwait"

if itest.s "x" != "x${disable_giga}" ; then
	setenv bootargs $bootargs fec.disable_giga=1
fi

if itest.s "x" != "x$wlmac" ; then
	setenv bootargs $bootargs wlcore.mac=$wlmac
fi

if itest.s "x" != "x$gpumem" ; then
	setenv bootargs $bootargs galcore.contiguousSize=$gpumem
fi

if itest.s "x" != "x$cma" ; then
	setenv bootargs $bootargs cma=$cma
fi

if test "sata" = "${dtype}" ; then
	setenv bootargs "$bootargs root=/dev/sda2" ;
else
        if test "usb" = "${dtype}" ; then
                setenv bootargs "$bootargs root=/dev/sda2" ;
        elif itest 0 -eq ${disk}; then
                setenv bootargs "$bootargs root=/dev/mmcblk1p2" ; # SoloX sdcard device root path
        else
                setenv bootargs "$bootargs root=/dev/mmcblk2p2" ; # SoloX emmc device root path
        fi
fi

if itest.s "x" != "x$show_fdt" ; then
	fdt print /
fi

if itest.s "x" != "x$show_env" ; then
	printenv
fi

if ${fs}load ${dtype} ${disk}:1 80800000 /uImage ; then
	bootm 0x80800000 - $fdt_addr
fi
echo "Error loading kernel image"
